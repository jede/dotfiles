set visualbell
set noswapfile

set iskeyword+=-
set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/.tmp/*,*/tmp/*,tmp/*,*/temp/*,*/.jhw-cache/*,*/.build/*,*/.meteor/*,*/node_modules/*,*/coverage/*,*/out/*

set grepprg=ack\ --nogroup\ --nocolor

let mapleader = " "

set number            " Show line numbers
set ruler             " Show line and column number
syntax enable         " Turn on syntax highlighting allowing local overrides

filetype plugin on

set matchpairs+=<:>

""
"" Whitespace
""

set nowrap                        " don't wrap lines
set tabstop=2                     " a tab is two spaces
set shiftwidth=2                  " an autoindent (with <<) is two spaces
set expandtab                     " use spaces, not tabs
set list                          " Show invisible characters
set backspace=indent,eol,start    " backspace through everything in insert mode
set autoindent

if exists("g:enable_mvim_shift_arrow")
  let macvim_hig_shift_movement = 1 " mvim shift-arrow-keys
endif

" List chars
set listchars=""                  " Reset the listchars
set listchars=tab:\ \             " a tab should display as "  ", trailing whitespace as "."
set listchars+=trail:.            " show trailing spaces as dots
set listchars+=extends:>          " The character to show in the last column when wrap is
                                  " off and the line continues beyond the right of the screen
set listchars+=precedes:<         " The character to show in the last column when wrap is
                                  " off and the line continues beyond the left of the screen

""
"" Searching
""

set hlsearch    " highlight matches
set incsearch   " incremental searching
set ignorecase  " searches are case insensitive...
set smartcase   " ... unless they contain at least one capital letter


""
"" Plugins
""

set rtp+=/usr/local/opt/fzf

let g:ale_linters = {
\   'javascript': ['standard'],
\}

let g:ale_fixers = {
\   'javascript': ['standard'],
\}

let g:ale_lint_on_save = 1
let g:ale_fix_on_save = 1

let g:syntastic_javascript_checkers = ['jsxhint']

let g:jsx_ext_required = 0

if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

let g:lightline = {
      \ 'colorscheme': 'monokai_tasty',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'fugitive#head'
      \ },
      \ }
set laststatus=2

let g:mkdx#settings     = { 'highlight': { 'enable': 1 },
                        \ 'enter': { 'shift': 1 },
                        \ 'links': { 'external': { 'enable': 1 } },
                        \ 'toc': { 'text': 'Table of Contents', 'update_on_write': 1 },
                        \ 'fold': { 'enable': 1 } }

let g:polyglot_disabled = ['markdown']

""
"" Mappings
""

"save
nnoremap ยง :wa
nnoremap <Leader><CR> :wa

"Paste without moving the cursor
nnoremap <Leader>p p`[
nnoremap <Leader>P P`[

"Delete without yanking
nnoremap <leader>d "_d
xnoremap <leader>d "_d

"Split switching
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

"Newlines on enter wo insert mode
nmap <S-Enter> O<Esc>
nmap <CR> o<Esc>

"Clear highlights
nnoremap <ESC> :nohlsearch<CR>

"Fugitive
nmap <leader>gb :Gblame<CR>

"FZF
nnoremap <silent> <C-p> :FZF<CR>

" NERDTree
map <leader>n :NERDTreeToggle<CR>:NERDTreeMirror<CR>

" Init ragtag for custom filetypes

autocmd FileType jst call RagtagInit()

" Find scss files
autocmd BufNewFile,BufRead *.scss setf scss

" Autosave on blur
autocmd FocusLost * silent! wa




" improve js (coffee?) highlighting
set lsp=2
hi link jsObjectKey             Identifier
hi link jsNoise                SpecialChar
hi link jsBrackets             SpecialChar
hi link jsParens               SpecialChar
hi link jsBraces               SpecialChar
hi link jsFuncBraces           SpecialChar
hi link jsFuncParens           SpecialChar
hi link jsClassBraces          SpecialChar
hi link jsClassNoise           SpecialChar
hi link jsObjectBraces         SpecialChar
hi link jsObjectSeparator      SpecialChar
hi link jsDestructuringBraces  SpecialChar


if has("gui_running")
  set guifont=Inconsolata:h12
endif

if has("gui_macvim")
  " Command-Shift-F on OSX
  map <D-F> :Ack<space>

  " FZF
  map  <D-t> :FZF<CR>
  imap <D-t> <ESC>:FZF<CR>
endif

let g:vim_monokai_tasty_italic = 1
colorscheme vim-monokai-tasty

